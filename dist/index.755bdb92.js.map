{"mappings":"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","sources":["src/dom.js"],"sourcesContent":["window.dom = {\r\n    // 创建节点\r\n    create(string) {\r\n        const template = document.createElement('template');\r\n        template.innerHTML = string.trim();\r\n        return template.content.firstChild;\r\n    },\r\n    // 在指定节点之后插入节点\r\n    after(node, newNode) {\r\n        node.parentNode.insertBefore(newNode, node.nextSibling);\r\n    },\r\n    // 在指定节点之前插入节点\r\n    before(node, newNode) {\r\n        node.parentNode.insertBefore(newNode, node);\r\n    },\r\n    // 在指定节点里新增一个子节点\r\n    append(parent, node) {\r\n        parent.appendChild(node)\r\n    },\r\n    // 更换指定节点的父节点\r\n    wrap(node, parent) {\r\n        dom.before(node, parent);\r\n        dom.append(parent, node);\r\n    },\r\n\r\n\r\n    // 删除指定节点\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    // 清空指点节点的所有子节点\r\n    empty(node) {\r\n        const array = [];\r\n        let x = node.firstChild\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    },\r\n\r\n    // 读写属性\r\n    attr(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value);\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    // 读写文本属性\r\n    text(node, string) {\r\n        // 写操作：dom.text(div,'newTextContent')\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerText = string // 兼容ie\r\n            } else {\r\n                node.textContent = string\r\n            }\r\n        } else if (arguments.length === 1) {  // 读操作dom.text(div)\r\n            if ('innerText' in node) {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    // 读写html内容\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    // 修改style内容\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            // dom.style(style, 'font-size', '24px');\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                // dom.style(style, 'color')\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                // dom.style(style, { color: 'red', border: '1px solid pink' })\r\n                for (let key in name) {\r\n                    node.style[key] = name[key]\r\n                }\r\n            }\r\n        }\r\n\r\n    },\r\n    // 操作标签里的class属性\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className);\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className);\r\n        },\r\n        has(node, className) {\r\n            return node.classList.contains(className);\r\n        }\r\n    },\r\n    // 用于添加事件监听\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn);\r\n    },\r\n    // 用于删除事件监听\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn);\r\n    },\r\n\r\n\r\n\r\n}\r\n"],"names":[],"version":3,"file":"index.755bdb92.js.map","sourceRoot":"/__parcel_source_root/"}