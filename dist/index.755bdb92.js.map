{"mappings":"AAAA,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC;AAEhB,OAAO;AACP,GAAG,CAAC,MAAM,GAAG,SAAU,MAAM,EAAE;IAC3B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,AAAC;IACpD,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;IACnC,OAAO,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC;CACtC;AACD,cAAc;AACd,GAAG,CAAC,KAAK,GAAG,SAAU,IAAI,EAAE,OAAO,EAAE;IACjC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;CAC3D;AACD,cAAc;AACd,GAAG,CAAC,MAAM,GAAG,SAAU,IAAI,EAAE,OAAO,EAAE;IAClC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;CAC/C;AACD,gBAAgB;AAChB,GAAG,CAAC,MAAM,GAAG,SAAU,MAAM,EAAE,IAAI,EAAE;IACjC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC;CAC3B;AACD,aAAa;AACb,GAAG,CAAC,IAAI,GAAG,SAAU,IAAI,EAAE,MAAM,EAAE;IAC/B,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACzB,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;CAC5B;AAED,SAAS;AACT,GAAG,CAAC,MAAM,GAAG,SAAU,IAAI,EAAE;IACzB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC;IACjC,OAAO,IAAI,CAAA;CACd;AACD,eAAe;AACf,GAAG,CAAC,KAAK,GAAG,SAAU,IAAI,EAAE;IACxB,MAAM,EAAE,UAAU,CAAA,EAAE,GAAG,IAAI,AAAC;IAC5B,MAAM,KAAK,GAAG,EAAE,AAAC;IACjB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;QACxC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;KACpC;IACD,OAAO,KAAK,CAAA;CACf","sources":["src/dom.js"],"sourcesContent":["window.dom = {};\r\n\r\n// 创建节点\r\ndom.create = function (string) {\r\n    const template = document.createElement('template');\r\n    template.innerHTML = string.trim();\r\n    return template.content.firstChild;\r\n}\r\n// 在指定节点之后插入节点\r\ndom.after = function (node, newNode) {\r\n    node.parentNode.insertBefore(newNode, node.nextSibling);\r\n}\r\n// 在指定节点之前插入节点\r\ndom.before = function (node, newNode) {\r\n    node.parentNode.insertBefore(newNode, node);\r\n}\r\n// 在指定节点里新增一个子节点\r\ndom.append = function (parent, node) {\r\n    parent.appendChild(node)\r\n}\r\n// 更换指定节点的父节点\r\ndom.wrap = function (node, parent) {\r\n    dom.before(node, parent);\r\n    dom.append(parent, node);\r\n}\r\n\r\n// 删除指定节点\r\ndom.remove = function (node) {\r\n    node.parentNode.removeChild(node)\r\n    return node\r\n}\r\n// 清空指点节点的所有子节点\r\ndom.empty = function (node) {\r\n    const { childNodes } = node;\r\n    const array = [];\r\n    for (let i = 0; i < childNodes.length; i++) {\r\n        array.push(childNodes[i])\r\n        node.remove(childNodes[isFinite])\r\n    }\r\n    return array\r\n}"],"names":[],"version":3,"file":"index.755bdb92.js.map","sourceRoot":"/__parcel_source_root/"}